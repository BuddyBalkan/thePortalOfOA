<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	 
	 <!-- 定义.properties文件 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations" value="classpath:config/JDBC.properties"/>
    </bean>
    
    <!-- 配置数据源  -->
    <bean id="datasource" destroy-method="close" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource">
    	<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="maxActive" value="10"></property>
    </bean>
    
    <!-- 自动创建 SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	
    	 <!-- 扫描包下面的java文件 -->
           <property name="packagesToScan">
              <list>
                <value>com.seeyon.portal.pojo</value>
              </list>
          </property>
    	
    	<!-- 配置 hibernate.cfg.xml 中的信息 -->
          <property name="hibernateProperties">
              <props>
                  <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                  <prop key="hibernate.show_sql">true</prop>
                  <prop key="hibernate.format_sql">true</prop>
                  <prop key="hibernate.hbm2ddl.auto">validate</prop>
              </props>
          </property>
    </bean>
    
    <!-- <context:annotation-config />
    
    自动扫描base-pack子包下面Java文件，如果扫描到有
    @Component @Controller @Service等这些注解的类，则把这些类注册为bean
    <context:component-scan base-package="com.seeyon.portal.dao" /> -->
    
    <!-- Spring 调用 Hibernate 的持久化操作 -->
     <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
         <property name="sessionFactory" ref="sessionFactory"></property>
     </bean>
    
    
    
</beans>
